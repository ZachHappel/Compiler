parseProgram()

parseBlock()

parseStatementList() {
}

parseStatement()

parseAssignmentStatement()

parseVarDecl()

parseWhileStatement()

parseIfStatement()

parseExpression()

parseIntExpression()

parseStringExpression()

parseBooleanExpression()

parseId()

parseChar()

parseCharList()

match()

---

ArrayList token_stream

parseProgram (  token_stream ) {

    parseBlock()
    match($)

}


parseBlock () {
    match({)
    parseStatementList()
    match(})
}


parseStatementList() {

    // create statement list
    statementListNew = new StatementListl; 
    statement = parseStatement();
    statementListNew.setChild(statement)



    if (parsedStatment) {
        childStatementList = new parseStatementList() // recursion, thereby creates another statement, which could be or something and another statementList

        statementListNew.addChild(childStatementList)
    }

}

